# Generated by Django 5.1.7 on 2025-03-20 14:30

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('brand', models.CharField(blank=True, max_length=255, null=True, verbose_name='Бренд')),
                ('manufacturer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Производитель')),
                ('is_custom', models.BooleanField(default=True, verbose_name='На пошив')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('uniq', models.BooleanField(default=False, verbose_name='Уникальная группа')),
                ('required', models.BooleanField(default=False, verbose_name='Обязательно')),
                ('min_count', models.IntegerField(default=1, verbose_name='Минимальное количество')),
                ('max_count', models.IntegerField(default=1, verbose_name='Максимальное количество')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='configurator.item', verbose_name='Родительская группа')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurator.product', verbose_name='Товар')),
            ],
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('operation', models.CharField(choices=[('INCLUDE', 'Включает'), ('EXCLUDE', 'Исключает'), ('RECOMMEND', 'Рекомендует')], max_length=100, verbose_name='Операция')),
                ('operator', models.CharField(choices=[('AND', 'И'), ('OR', 'ИЛИ')], max_length=100, verbose_name='Оператор')),
                ('condition_for', models.ManyToManyField(related_name='conditions', to='configurator.item', verbose_name='Условие для')),
                ('condition_items', models.ManyToManyField(related_name='condition_items', to='configurator.item', verbose_name='Элементы условия')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conditions', to='configurator.product', verbose_name='Товар')),
            ],
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('operation', models.CharField(choices=[('INCLUDE', 'Включает'), ('EXCLUDE', 'Исключает'), ('RECOMMEND', 'Рекомендует')], max_length=100, verbose_name='Операция')),
                ('attribute_for', models.ManyToManyField(related_name='attributes', to='configurator.item', verbose_name='Признак для')),
                ('attribute_items', models.ManyToManyField(related_name='attribute_items', to='configurator.item', verbose_name='Элементы признака')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='configurator.product', verbose_name='Товар')),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='configurator.item', verbose_name='Изделие')),
            ],
        ),
    ]
